?png
dev.copy(png, file="./exploratory/plot1.png")
dev.off
dev.off()
?plot
View(dataset)
?as.Date
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
class(dataset$Date)
dataset$Time <- as.POSIXct(paste(data$Date, data$Time))
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
class(dataset$Time)
?Sys.setlocale
View(dataset)
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)"))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = ""))
?plot
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory.plot2.png")
dev.off()
dev.copy(png, file="./exploratory/plot2.png")
dev.off()
with(dataset, plot(Times, sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,plot(Time, Sub_metering_1, col = "black"))
with(dataset,plot(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,plot(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
lines(dataset,plot(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,lines(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,lines(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset,lines(Time, Sub_metering_3, col = "blue",type = "l"))
mar()
par()
par(mar=c(5,5,5,5))
dev.copy(png, file="./exploratory/plot3.png")
dev.off()
par(mfrow = c(2,2))
par(mfrow = c(1,1))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
?legend
legend("topright",legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),col = c("black", "red", "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png")
dev.off()
par(mfrow = c(2,2))
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png")
dev.off()
dev.copy(png, file="./exploratory/plot4.png", height=500,width =500)
dev.off()
?legend
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1)
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1, cex=0.1)
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1, cex=0.1)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=500, width =500)
dev.off()
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.4, cex = 0.4)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex =0.35)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35, pt.cex=0.6)
source('~/.active-rstudio-document')
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png")
dev.off()
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png"height = 480 ,width = 480)
dev.off()
hist(dataset$Global_active_power, xlab = "Global Active Power (kilowatt)", main = "Global Active Power", col = "red")
dev.copy(png, file="./exploratory/plot1.png", height = 480 ,width = 480)
dev.off()
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png",height = 480 ,width = 480)
dev.off()
rm(list = ls())
##1\download the resources from the website
if(!file.exists("./exploratory")) {dir.create("./exploratory")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./exploratory/dataset.zip")
unzip("./exploratory/dataset.zip", exdir = "./exploratory")
##2\load the dataset into R
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
##making plot 2
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
rm(list = ls())
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
par(mfrow = C(1,1))
par(mfrow= c(1,1))
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
rm(list = ls)
rm(list = ls())
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
##making plot 3
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "60c352cc031651ca5437",
secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
View(req)
library(jsonlite)
myjson <- toJSON(req, pretty = T)
json1 <- content(req)
myjson <- toJSON(json1, pretty = T)
myjson
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
View(json2)
json2[json2$full_name == "jtleek/datasharing", ]$created_at
json1 = content(req)
# 5. convert the list to json
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
# 6. Result
json2[json2$full_name == "jtleek/datasharing", ]$created_at
oauth_endpoints("github")
myapp <- oauth_app("github",
+                    key = "60c352cc031651ca5437",
+                    secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "60c352cc031651ca5437",
secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json1 <- content(req)
myjson <- toJSON(json1, pretty = T)
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2[json2$full_name == "jtleek/datasharing", ]$created_at
setwd("C:/Users/Administrator/Desktop/git/RepData_PeerAssessment1")
unzip("activity.zip")
act <- read.csv("./activity/activity.csv", header = T, stringsAsFactors = F, na.strings = "NA")
act$date <- as.Date(act$date,fformat = "%Y/%m/%d")
head(act, n = 6)
librayr(magrittr)
library(magrittr)
df <- act
%>% group_by(date)
df <- act %>% group_by(date)
library(dplyr)
library(magrittr)
df <- act %>% group_by(date) %>% summarise(tsteps = sum(steps,na.rm = T))
mean(df$tsteps)
median(df$tsteps)
?ddply
?daply
?ddply
library(plyr)
?ddply
?replace
?ddply
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
View(dfx)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
impute<-function(x){
mean <- mean(x,na.rm = T)
results<- replace(x,is.na(x),mean)
results
}
imputedata <- act %>%  ddply(steps, .(date), impute(steps) )
View(act)
imputedata <- act %>%  ddply(steps, ~date, impute(steps) )
imputedata <- act %>%  ddply(~date, impute(steps) )
ddply(act, ~date, impute(steps))
ddply(activity,~date,transform,impute(steps))
ddply(act,~date,transform,impute(steps))
ddply(act,~date,transform,steps = impute(steps))
ddply(act,~interval,transform,steps = impute(steps))
?round
impute<-function(x){
mean <- round(mean(x,na.rm = T),0)
if(is.nan(mean)) mean <- 0
results<- replace(x,is.na(x),mean)
results
}
activityImputed<-ddply(act,~interval,transform,steps <- impute(steps))
View(activityImputed)
activityImputed<-ddply(act,~date,transform,steps <- impute(steps))
View(activityImputed)
View(impute)
impute<-function(x){
mean <- round(mean(x,na.rm = T),0)
if(is.na(mean)) mean <- 0
results<- replace(x,is.na(x),mean)
results
}
impute(c(NA, NA))
activityImputed<-ddply(act,~date,transform,steps <- impute(steps))
View(activityImputed)
act2 <- split(act, date)
act2 <- split(act, act$date)
impute(act2$`2012-10-01`)
activityImputed<-ddply(act,~date,steps <- impute(steps))
activityImputed<-ddply(act,~date,transform,steps <- impute(steps))
View(activityImputed)
activityImputed<-ddply(act,~interval,transform,steps <- impute(steps))
View(activityImputed)
View(impute)
impute<-function(x){
mean <- mean(x,na.rm = T)
if(is.na(mean)) {mean <- 0}
results<- replace(x,is.na(x),mean)
results
}
activityImputed<-ddply(act,~interval,transform,steps <- impute(steps))
View(activityImputed)
impute<-function(x){
mean <- mean(x,na.rm = T)
results<- replace(x,is.na(x),mean)
results
}
imputedata <- act %>%  ddply(steps, .(date), transform, steps = impute(steps) )
impute<-function(x){
mean <- mean(x,na.rm = T)
results<- replace(x,is.na(x),mean)
results
}
imputedata <- ddply(act, steps, ~date, transform, steps = impute(steps) )
impute<-function(x){
mean <- mean(x,na.rm = T)
results<- replace(x,is.na(x),mean)
results
}
imputedata <- ddply(act,  ~date, transform, steps = impute(steps) )
View(imputedata)
impute<-function(x){
mean <- mean(x,na.rm = T)
if(is.nan(mean)) mean <- 0
results<- replace(x,is.na(x),mean)
results
}
imputedata <- ddply(act,  ~date, transform, steps = impute(steps) )
View(imputedata)
round(1.5,0)
impute<-function(x){
mean <- mean(x,na.rm = T)
if(is.nan(mean)) mean <- 0
round(mean,0)
results<- replace(x,is.na(x),mean)
results
}
imputedata <- ddply(act,  ~date, transform, steps = impute(steps) )
View(imputedata)
detach("package: dplyr")
detach("dplyr")
?detach
detach(package:dplyr)
View(imputedata)
imputeact <- ddply(act,  ~interval, transform, steps = impute(steps) )
View(imputeact)
round(1.222222, 0)
impute<-function(x){
mean <- mean(x,na.rm = T)
if(is.nan(mean)) {mean <- 0}
mean <- round(mean,0)
results<- replace(x,is.na(x),mean)
results
}
imputeact <- ddply(act,  ~interval, transform, steps = impute(steps) )
View(imputeact)
df3 <- imputeact %>% group_by(date) %>% summarise(tsteps = sum(steps))
library(dplyr)
df3 <- imputeact %>% group_by(date) %>% summarise(tsteps = sum(steps))
df3
median(df3$tsteps)
mean(df3$tsteps)
View(imputeact)
```{r, patternplots2, chache = T, fig.width = 5}
df3 <- imputeact %>% group_by(date) %>% summarise(tsteps = sum(steps))
hist(df3$tsteps, main = " Total number of steps taken each day", xlab = "Steps number")
median(df3$tsteps)
mean(df3$tsteps)
```{r}
?weekadays
?weekdays
weekdays(act$date)
Sys.setlocale(category = "LC_ALL", locale = "english")
weekdays(act$date)
zzz
ifweekday <- function(x){
m <- weekdays(x)
if(m == "Saturday"|"Sunday") {k <- T}
else k <- F
}
ifweekday <- function(x){
m <- weekdays(x)
if(m == "Saturday"|"Sunday") {k <- T}
else k <- F
k
}
actweek <- mutate(imputeact, weekday = ifweekday(date))
actweek <- mutate(imputeact, weekday <- ifweekday(date))
mutate(imputeact, weekday <- ifweekday(date))
?mutate
mutate(imputeact, weekday <- 0)
mutate(imputeact, weekday = 0)
class(imputeact$date)
ifweekday(imputeact$date)
ifweekday <- function(x){
m <- weekdays(x)
weekend <- c("Saturday","Sunday")
if(m %in% weekend) {k <- F}
else k <- T
k
}
ifweekday(imputeact$date)
ifweekday <- function(x){
m <- weekdays(x)
weekend <- c("Saturday","Sunday")
if(m %in% weekend) {k <- F}
else k <- T
k
}
ifweekday(imputeact$date)
actweek <- mutate(imputeact, weekday = ifweekday(date))
View(actweek)
actweek <- mutate(imputeact, weekday = ifweekday(date))
library(dplyr)
detach("package:plyr")
library(dplyr)
actweek <- mutate(imputeact, weekday = ifweekday(date))
actweek <- mutate(imputeact, weekday = date)
ifweekday(imputeact$date[1])
actweek <- mutate(imputeact, weekday = ifweekday(date))
?mutate
actweek <- mutate(imputeact, weekday = sapply(date, ifweekday))
View(actweek)
df4 <- actweek %>% group_by(interval, weekday) %>% summarise(astep <- mean(steps))
df4
xyplot(asteps~interval|weekday, df4)
library(lattice)
xyplot(asteps~interval|weekday, df4)
xyplot(astep~interval|weekday, df4)
df4
df4 <- actweek %>% group_by(interval, weekday) %>% summarise(asteps = mean(steps))
xyplot(astep~interval|weekday, df4)
xyplot(asteps~interval|weekday, df4)
View(act)
?knit2html
setwd("C:/Users/Administrator/Desktop/git/RepData_PeerAssessment1")
knit2html("./PA1_template.Rmd")
library(knitr)
knit2html("./PA1_template.Rmd")
knit("PA1_template.Rmd")
knit2html("PA1_template.md")
