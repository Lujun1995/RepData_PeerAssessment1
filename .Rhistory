dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matix <- my_vector
my_matrix <- my_vector
?matirix
?matrix
my_matix2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, 4, 5)
my_matrix2
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, 4, 5)
skip()
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
skip()
rm(list = ls())
play()
rm(list = ls())
nxt()
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matix,my_matrix2)
skip()
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data<- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
TRUE == TRUE
(FALSE ==TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
! (5==7)
FALSE & FALSE
TRUE && c(TRUE, FALSE, FALSE)
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE,
FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints >7)
any(ints <0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit
submit
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4,3.65,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
ealuate(function(x){x[1],c(8,4,0)})
ealuate(function(x){x[1]},c(8,4,0)})
ealuate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!"
)
submit()
telegram("BA")
submit()
submit()
mad_libs(adjective="1", noun="2", place="3")
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
xfig()
czxcz
setwd("~/exploratory data")
getwd()
oldwd <- getwd()
setwd("C:/Users/Administrator/Desktop/coursera/exploratory data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
setwd(oldwd)
rm(list = ls())
if(!file.exists("./explortarydata")) file.create("./explortarydata")
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./explortarydata")
download.file(fileUrl, destfile = "./explortarydata/dataset.zip")
if(!file.exists("./explortarydata")) file.create("./explortarydata")
if(!file.exists("./explortarydata")) dir.create("./explortarydata")
getwd
getwd()
setwd("C:/Users/Administrator/Desktop/coursera2")
if(file.exists("./explortarydata")) {file.create("./explortarydata")}
if(!file.exists("./explortarydata")) {file.create("./explortarydata")}
if(!file.exists("./explortarydata")) {dir.create("./explortarydata")}
fileUrl
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./exlortarydata/dataset.zip")
download.file(fileUrl, destfile = "./explortarydata/dataset.zip")
unzip("dataset.zip")
unzip("./exlortarydata/dataset.zip")
unzip("dataset.zip", exdir = "./exlortarydata")
unzip("dataset.zip", exdir = "./explortarydata")
if(!file.exists("./exploratory")) {dir.create("./exploratory")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./exploratory/dataset.zip")
unzip("dataset.zip", exdir = "./exploratory")
if(!file.exists("./data")) dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./data/datasets.zip")
unzip("datasets.zip", exdir = "./data" )
unzip("datasets.zip", exdir = "~/data" )
unzip("./exploratory/dataset.zip", exdir = "./exploratory")
unzip("./exploratory/dataset.zip", exdir = "./exploratory/dataset.txt")
dataset <- read.table("./exploratory/dataset.txt")
dataset <- read.table("./exploratory/household_power_consumption.txt")
dataset <- read.table("./exploratory/household_power_consumption.txt")
dataset2 <- dataset["Date" == "1/2/2007" | "2/2/2007"]
dataset2 <- dataset["Date" = "1/2/2007" | "2/2/2007"]
dataset2 <- dataset["Date" = "1/2/2007"]
summary(dataset)
attributes(dataset)
View(dataset)
class(dataset$V1)
dataset <- read.table("./exploratory/household_power_consumption.txt", stringsAsFactors = FALSE)
class(dataset$V1)
dataset2 <- dataset[grep("1/2/2007|2/2/2007", dataset$V1)]
dataset2 <- dataset[grep("1/2/2007|2/2/2007", dataset[,1])]
dataset2 <- dataset[grep("1/2/2007|2/2/2007", dataset$V1)]
data <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines(files),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
View(dataset)
hist(dataset$Global_active_power)
xlab()= "Global"
xlab = "global"
hist(dataset$Global_active_power, xlab = "Global Active Power (kilowatt)", main = "Global Active Power", col = red)
hist(dataset$Global_active_power, xlab = "Global Active Power (kilowatt)", main = "Global Active Power", col = "red")
windows()
hist(dataset$Global_active_power, xlab = "Global Active Power (kilowatt)", main = "Global Active Power", col = "red")
?dev.copy
?png
dev.copy(png, file="./exploratory/plot1.png")
dev.off
dev.off()
?plot
View(dataset)
?as.Date
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
class(dataset$Date)
dataset$Time <- as.POSIXct(paste(data$Date, data$Time))
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
class(dataset$Time)
?Sys.setlocale
View(dataset)
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)"))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = ""))
?plot
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory.plot2.png")
dev.off()
dev.copy(png, file="./exploratory/plot2.png")
dev.off()
with(dataset, plot(Times, sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,plot(Time, Sub_metering_1, col = "black"))
with(dataset,plot(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,plot(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
lines(dataset,plot(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,lines(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black",type = "l"))
with(dataset,lines(Time, Sub_metering_2, col = "red",type = "l"))
with(dataset,lines(Time, Sub_metering_3, col = "blue",type = "l"))
mar()
par()
par(mar=c(5,5,5,5))
dev.copy(png, file="./exploratory/plot3.png")
dev.off()
par(mfrow = c(2,2))
par(mfrow = c(1,1))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
?legend
legend("topright",legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),col = c("black", "red", "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png")
dev.off()
par(mfrow = c(2,2))
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png")
dev.off()
dev.copy(png, file="./exploratory/plot4.png", height=500,width =500)
dev.off()
?legend
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1)
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1, cex=0.1)
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.1, cex=0.1)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=500, width =500)
dev.off()
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.4, cex = 0.4)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex =0.35)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35, pt.cex=0.6)
source('~/.active-rstudio-document')
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png", height=1000, width =1000)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png")
dev.off()
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png"height = 480 ,width = 480)
dev.off()
hist(dataset$Global_active_power, xlab = "Global Active Power (kilowatt)", main = "Global Active Power", col = "red")
dev.copy(png, file="./exploratory/plot1.png", height = 480 ,width = 480)
dev.off()
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
par(mfrow = c(2,2))
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
with(dataset,plot(Time, Voltage, ylab = "Voltage", xlab = "datetime",type = "l"))
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 0.35, cex = 0.35,pt.cex=0.6)
with(dataset,plot(Time, Global_reactive_power, ylab = "Global_reactive_power", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot4.png",height = 480 ,width = 480)
dev.off()
rm(list = ls())
##1\download the resources from the website
if(!file.exists("./exploratory")) {dir.create("./exploratory")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl, destfile = "./exploratory/dataset.zip")
unzip("./exploratory/dataset.zip", exdir = "./exploratory")
##2\load the dataset into R
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
##making plot 2
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
rm(list = ls())
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
par(mfrow = C(1,1))
par(mfrow= c(1,1))
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset,plot(Time, Global_active_power, ylab = "Global Active Power (kilowatt)", xlab = "",type = "l"))
dev.copy(png, file="./exploratory/plot2.png",height = 480 ,width = 480)
dev.off()
rm(list = ls)
rm(list = ls())
dataset <- read.table(text = grep("^[1,2]/2/2007",readLines("./exploratory/household_power_consumption.txt"),value=TRUE), sep = ';', col.names = c("Date", "Time", "Global_active_power", "Global_reactive_power", "Voltage", "Global_intensity", "Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), na.strings = '?')
##making plot 3
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time)
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
dataset$Date <- as.Date(dataset$Date, "%d/%m/%Y")
dataset$Time <- as.POSIXct(paste(dataset$Date, dataset$Time))
Sys.setlocale(category = "LC_ALL", locale = "english")
with(dataset, plot(Time, Sub_metering_1, ylab = "Energy sub melting", xlab = "", main = "", type = "n"))
with(dataset,lines(Time, Sub_metering_1, col = "black"))
with(dataset,lines(Time, Sub_metering_2, col = "red"))
with(dataset,lines(Time, Sub_metering_3, col = "blue"))
legend('topright', col = c('black', 'red', 'blue'), legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lwd = 1)
dev.copy(png, file="./exploratory/plot3.png",height = 480 ,width = 480)
dev.off()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "60c352cc031651ca5437",
secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
View(req)
library(jsonlite)
myjson <- toJSON(req, pretty = T)
json1 <- content(req)
myjson <- toJSON(json1, pretty = T)
myjson
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
View(json2)
json2[json2$full_name == "jtleek/datasharing", ]$created_at
json1 = content(req)
# 5. convert the list to json
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
# 6. Result
json2[json2$full_name == "jtleek/datasharing", ]$created_at
oauth_endpoints("github")
myapp <- oauth_app("github",
+                    key = "60c352cc031651ca5437",
+                    secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "60c352cc031651ca5437",
secret = "ad5b55637b63985ee79f548c61d0a8f15928ceb5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
json1 <- content(req)
myjson <- toJSON(json1, pretty = T)
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2 = jsonlite::fromJSON(jsonlite::toJSON(json1))
myjson[myjson$full_name == "jtleek/datasharing", ]$created_at
json2[json2$full_name == "jtleek/datasharing", ]$created_at
str(read.csv)
setwd("C:/Users/Administrator/Desktop/git/RepData_PeerAssessment1")
act <- read.csv("./activity/acitivity.csv", header = T, stringsAsFactors = F, na.strings = "NA")
act <- read.csv("./activity/acitivity.csv", header = T, stringsAsFactors = F, na.strings = "NA")
act <- read.csv("./activity/acitivity.csv")
str(as.date)
str(as.Date)
?as.Date
str(plot)
?plot
act <- read.csv("./activity/activity.csv", header = T, stringsAsFactors = F, na.strings = "NA")
act$date <- as.Date(act$date,fformat = "%Y/%m/%d")
act2 <- na.omit(act)
library(dplyr)
act2 <- group_by(act2, date)
df3 <- summarise(act2, tsteps = mean(steps))
View(df3)
date <- unique(act$date)
date
for(i in date) {}
for(i in date) {
date1 <- date
for (i in date1){ k <- filter(act,date == i)
act["date"=="2012-10-01"]
m1 <- act["date"=="2012-10-01"]
View(m1)
m1 <- act["date"]
filter(act,date == "2012-10-01", steps = "NA") = 1
library(dplyr)
filter(ct,date == "2012-10-01", steps = "NA") <- 1
filter(act,date == "2012-10-01", steps = "NA") <- 1
filter(act,date == "2012-10-01", steps = "NA")
(filter(act,date == "2012-10-01", steps == "NA"))$steps <- 1
(filter(act,date == "2012-10-01", steps == "NA"))$steps
(filter(act,date == "2012-10-01", steps == "NA"))
filter(act,date == "2012-10-01", steps == "NA")
View(act)
(filter(act,date == "2012-10-01", steps == NA))
filter(act,date == "2012-10-01")
filter(act,date == "2012-10-01", steps == na)
filter(act,date == "2012-10-01", steps == NA)
m <- filter(act,date == "2012-10-01", steps == NA)
View(m)
View(act)
m <- filter(act,date == "2012-10-01", interval ==5)
View(m)
?filter
m <- filter(act,date == "2012-10-01", steps == is.na)
m <- filter(act,date == "2012-10-01", steps == is.na())
m <- filter(act,date == "2012-10-01", is.na(steps))
View(m)
filter(act,date == "2012-10-01", is.na(steps))$steps <- 1
(filter(act,date == "2012-10-01", is.na(steps)))$steps <- 1
(filter(act,date == "2012-10-01", is.na(steps)))$steps
(filter(act,date == "2012-10-01", is.na(steps)))$steps <- 1
((filter(act,date == "2012-10-01", is.na(steps)))$steps) <- 1
filter(act,date == "2012-10-01", interval = 5) $steps <- 1
filter(act,date == "2012-10-01", interval == 5) $steps <- 1
